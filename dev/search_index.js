var documenterSearchIndex = {"docs":
[{"location":"references/#List-of-references","page":"List of references","title":"List of references","text":"","category":"section"},{"location":"development/#Development-notes","page":"Development notes","title":"Development notes","text":"","category":"section"},{"location":"development/","page":"Development notes","title":"Development notes","text":"This module was created using PkgTemplates.jl and the following code:","category":"page"},{"location":"development/","page":"Development notes","title":"Development notes","text":"using PkgTemplates\n\n\n# DIA_CARS\n\ndirectory = \"C:\\\\Users\\\\greifenstein\\\\Documents\\\\armstrong\\\\Documents\\\\Code\\\\juliacars\\\\\"\n\nt = Template(;\n    user = \"tuda_rsm/cross-sections/cars/jcars\",\n    host = \"https://git.rwth-aachen.de\",\n    julia=v\"1.7\",\n    authors=\"Max Greifenstein, TU Darmstadt RSM\",\n    dir = directory,\n    plugins=[\n        GitLabCI(),\n        Documenter{GitLabCI}(),\n        License(; name=\"MIT\"),\n        !TagBot,\n        !CompatHelper,\n    ]\n)\n\nt(\"DiaCARS.jl\")","category":"page"},{"location":"development/","page":"Development notes","title":"Development notes","text":"At the moment, the codecov plugin is deactivated.","category":"page"},{"location":"development/#Workflow-for-changing-the-code","page":"Development notes","title":"Workflow for changing the code","text":"","category":"section"},{"location":"development/","page":"Development notes","title":"Development notes","text":"If not already done, install Revise.jl and active (either automatically as suggested in the docs or by using Revise after opening a new REPL (that is, before loading any code!). Create a new .jl file in the folder that contains DiaCARS and start working:","category":"page"},{"location":"development/","page":"Development notes","title":"Development notes","text":".\n├── DiaCARS/\n│   ├── docs\n│   ├── src\n│   ├── test\n│   └── ...\n└── testingscript.jl","category":"page"},{"location":"development/","page":"Development notes","title":"Development notes","text":"Example content of testingscript.jl:","category":"page"},{"location":"development/","page":"Development notes","title":"Development notes","text":"using DiaCARS\nT=2000\nSpecies = \"N2\"\nROI = [2200 2400]\nFrequencyOffset = 0\nModel = \"I\"\nP = 1\n\nχR,χI,ω = simulateTheoreticalSusceptibility(T,Species,P,Model,ROI,FrequencyOffset)","category":"page"},{"location":"development/","page":"Development notes","title":"Development notes","text":"Now start working on the code. On every run, Revise will use the updated code even without closing the REPL. Check out the documentation of Revise.jl for the limitations. When satisfied, don't forget to update the documentation, commit and push.","category":"page"},{"location":"examples/#Examples","page":"Examples","title":"Examples","text":"","category":"section"},{"location":"examples/#Simulation-of-Single-Pump-Theoretical-Susceptibility-Spectra","page":"Examples","title":"Simulation of Single-Pump Theoretical Susceptibility Spectra","text":"","category":"section"},{"location":"examples/","page":"Examples","title":"Examples","text":"using DiaCARS\nusing Plots\n\nT=2000\nSpecies = \"N2\"\nROI = [2200 2400]\nFrequencyOffset = 0\nModel = \"I\"\nP = 1\n\nχR,χI,ω = simulateTheoreticalSusceptibility(T,Species,P,Model,ROI,FrequencyOffset)\n\n# Plot the result\nplotlyjs()\np=plot(ω,[χR,χI],title=\"Theoretical Susceptibility\", label=[\"Real\" \"Imaginary\"])\nxlabel!(\"Raman shift in cm-1\")\nylabel!(\"Amplitude\")\nxlims!((ROI[1],ROI[2]))","category":"page"},{"location":"functionreference/#List-of-all-functions-of-DiaCARS.jl","page":"Function Reference","title":"List of all functions of DiaCARS.jl","text":"","category":"section"},{"location":"functionreference/","page":"Function Reference","title":"Function Reference","text":"Modules = [DiaCARS]","category":"page"},{"location":"functionreference/#DiaCARS.simulateTheoreticalSusceptibility-NTuple{6, Any}","page":"Function Reference","title":"DiaCARS.simulateTheoreticalSusceptibility","text":"χR,χI,ω,Species,MolecularParameters=simulateTheoreticalSusceptibility(T,Species,P,Model,ROI,FrequencyOffset)\n\nSimulates the theoretical suscepbtility of a given Species based on temperature T in K, pressure P in bar on a wavenumberarray ω based on the region of interest ROI \n\nT: Temperature in K\nSpecies: \"N2\",\"O2\" or \"CO\"\nP: Pressure in Bar\nModel: \"I\" for isolated lines, \"V\" for Voigt profile or \"R\" for rotational diffusion\nROI: [ωmin ωmax], range for which to calculate the suscepbtility. Expect edge effects if using Voigt\nωres: Resolution of original wavenumber array. Should be sufficiently small to resolve transitions.\n\n\n\n\n\n","category":"method"},{"location":"","page":"Home","title":"Home","text":"CurrentModule = DiaCARS","category":"page"},{"location":"#DiaCARS.jl","page":"Home","title":"DiaCARS.jl","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"Documentation for DiaCARS.","category":"page"},{"location":"#What-is-DiaCARS.jl?","page":"Home","title":"What is DiaCARS.jl?","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"DiaCARS.jl is a tool to simulate complex susceptibilities used to generate CARS spectra for various diatomic molecules. Currently supported: N2, O2, CO","category":"page"},{"location":"#How-to-use-it?","page":"Home","title":"How to use it?","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"It is not meant to be used stand alone (although some simple spectral generation is implemented, but only lightly tested). Instead, its purpose is to produce theoretical complex susceptibilities to build up a library of compressed spectra using CARS.jl which can be used to fit experimental spectra. For examples, check out the documentation of CARS.jl.","category":"page"}]
}
