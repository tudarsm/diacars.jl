var documenterSearchIndex = {"docs":
[{"location":"references/#List-of-references","page":"References","title":"List of references","text":"","category":"section"},{"location":"development/#Development-notes","page":"Development","title":"Development notes","text":"","category":"section"},{"location":"development/","page":"Development","title":"Development","text":"This module was created using PkgTemplates.jl and the following code:","category":"page"},{"location":"development/","page":"Development","title":"Development","text":"using PkgTemplates\n\n\n# DIA_CARS\n\ndirectory = \"C:\\\\Users\\\\greifenstein\\\\Documents\\\\armstrong\\\\Documents\\\\Code\\\\juliacars\\\\\"\n\nt = Template(;\n    user = \"tuda_rsm/cross-sections/cars/jcars\",\n    host = \"https://git.rwth-aachen.de\",\n    julia=v\"1.7\",\n    authors=\"Max Greifenstein, TU Darmstadt RSM\",\n    dir = directory,\n    plugins=[\n        GitLabCI(),\n        Documenter{GitLabCI}(),\n        License(; name=\"MIT\"),\n        !TagBot,\n        !CompatHelper,\n    ]\n)\n\nt(\"DiaCARS.jl\")","category":"page"},{"location":"development/","page":"Development","title":"Development","text":"At the moment, the codecov plugin is deactivated.","category":"page"},{"location":"development/#Workflow-for-changing-the-code","page":"Development","title":"Workflow for changing the code","text":"","category":"section"},{"location":"development/","page":"Development","title":"Development","text":"If not already done, install Revise.jl and active (either automatically as suggested in the docs or by using Revise after opening a new REPL (that is, before loading any code!). Create a new .jl file in the folder that contains DiaCARS and start working:","category":"page"},{"location":"development/","page":"Development","title":"Development","text":".\n├── DiaCARS/\n│   ├── docs\n│   ├── src\n│   ├── test\n│   └── ...\n└── testingscript.jl","category":"page"},{"location":"development/","page":"Development","title":"Development","text":"Example content of testingscript.jl:","category":"page"},{"location":"development/","page":"Development","title":"Development","text":"using DiaCARS\nT=2000\nSpecies = \"N2\"\nROI = [2200 2400]\nFrequencyOffset = 0\nModel = \"I\"\nP = 1\n\nχR,χI,ω = simulateTheoreticalSusceptibility(T,Species,P,Model,ROI,FrequencyOffset)","category":"page"},{"location":"development/","page":"Development","title":"Development","text":"Now start working on the code. On every run, Revise will use the updated code even without closing the REPL. Check out the documentation of Revise.jl for the limitations. When satisfied, don't forget to update the documentation, commit and push.","category":"page"},{"location":"examples/#Examples","page":"Examples","title":"Examples","text":"","category":"section"},{"location":"examples/#Simulation-of-Single-Pump-Theoretical-Susceptibility-Spectra","page":"Examples","title":"Simulation of Single-Pump Theoretical Susceptibility Spectra","text":"","category":"section"},{"location":"examples/","page":"Examples","title":"Examples","text":"using DiaCARS\nusing Plots\n\nT=2000\nSpecies = \"N2\"\nROI = [2200 2400]\nFrequencyOffset = 0\nModel = \"I\"\nP = 1\n\nχR,χI,ω = simulateTheoreticalSusceptibility(T,Species,P,Model,ROI,FrequencyOffset)\n\n# Plot the result\nplotlyjs()\np=plot(ω,[χR,χI],title=\"Theoretical Susceptibility\", label=[\"Real\" \"Imaginary\"])\nxlabel!(\"Raman shift in cm-1\")\nylabel!(\"Amplitude\")\nxlims!((ROI[1],ROI[2]))\nsavefig(p, \"figure1.html\") # ignore this line, this is just for the documentation build process","category":"page"},{"location":"examples/","page":"Examples","title":"Examples","text":"<iframe src=\"../figure1.html\" style=\"height:500px;width:100%;\"></iframe>","category":"page"},{"location":"functionreference/#List-of-all-functions-of-DiaCARS.jl","page":"Function Reference","title":"List of all functions of DiaCARS.jl","text":"","category":"section"},{"location":"functionreference/","page":"Function Reference","title":"Function Reference","text":"Modules = [DiaCARS]","category":"page"},{"location":"functionreference/#DiaCARS.calculateLineWidths-Tuple{Any, Any, Any}","page":"Function Reference","title":"DiaCARS.calculateLineWidths","text":"calculateLineWidths(T,FJ,species)\n\nCalculates the Linewidths for a given species using the MEG law\n\nusing DiaCARS\nusing Plots\n\nSpecies = \"N2\"\nT=2000\nMolParams = DiaCARS.getMolecularParameters(Species)\nTT,FJ,GJ,G0V = DiaCARS.calculateTermEnergies(MolParams)\ntransitions = DiaCARS.calculateLinePositions(TT)\nγN2 = DiaCARS.calculateLineWidths(T,FJ,Species)\n\nSpecies = \"O2\"\nT=2000\nMolParams = DiaCARS.getMolecularParameters(Species)\nTT,FJ,GJ,G0V = DiaCARS.calculateTermEnergies(MolParams)\ntransitions = DiaCARS.calculateLinePositions(TT)\nγO2 = DiaCARS.calculateLineWidths(T,FJ,Species)\n\n# Plot the result\nplotlyjs()\np=plot(DiaCARS.J,[γN2 γO2],label=[\"N2\" \"O2\"])\nxlabel!(\"J\")\nylabel!(\"γ FWHM in cm-1\")\nsavefig(p, \"figure2.html\") # ignore this line, this is just for the documentation build process\n\n<iframe src=\"../figure2.html\" style=\"height:500px;width:100%;\"></iframe>\n\n\n\n\n\n","category":"method"},{"location":"functionreference/#DiaCARS.dconv_edge-Union{Tuple{T}, Tuple{Vector{T}, Vector{T}}} where T","page":"Function Reference","title":"DiaCARS.dconv_edge","text":"dconv_edge() Function to do a fast convolution on an array signal with kernel kern that produces an output  that has the same size as signal. Attention: has edge effects by design, account for this by enlargening your input signal. Uses LoopVectorization for speed.\n\n\n\n\n\n","category":"method"},{"location":"functionreference/#DiaCARS.simulateConvolvedSpectrum-NTuple{5, Any}","page":"Function Reference","title":"DiaCARS.simulateConvolvedSpectrum","text":"simulateConvolvedSpectrum(χR,χI,γ,method,ω)\n\nTakes the result of simulateTheoreticalSusceptibility() and performs the convolution. method can be \"Yuratich\" or \"Teets\", see Ref XX for what this means. Depending on the size of χ, this function detects if the functions for dual- or single-pump spectra is used.\n\n\n\n\n\n","category":"method"},{"location":"functionreference/#DiaCARS.simulateTheoreticalSusceptibility-NTuple{6, Any}","page":"Function Reference","title":"DiaCARS.simulateTheoreticalSusceptibility","text":"simulateTheoreticalSusceptibility(T,Species,P,Model,ROI,FrequencyOffset)\n\nSimulates the theoretical suscepbtility of a given Species based on temperature T in K, pressure P in bar on a wavenumberarray ω based on the region of interest ROI  The calculated amplitudes are valid only for single-pump CARS. For Dual-Pump Spectra, the results have to be divided by two.\n\n\n\n\n\n","category":"method"},{"location":"","page":"Home","title":"Home","text":"CurrentModule = DiaCARS","category":"page"},{"location":"#DiaCARS","page":"Home","title":"DiaCARS","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"Documentation for DiaCARS.","category":"page"},{"location":"","page":"Home","title":"Home","text":"","category":"page"}]
}
